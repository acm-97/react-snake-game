{
  "env": {
    "browser": true,
    "node": true,
    "es2020": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./",
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint", "react", "prettier", "import"],
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "prettier"
  ],
  "rules": {
    "jsx-a11y/anchor-is-valid": "off",
    "prefer-const": "off",
    "no-use-before-define": "off",
    "no-underscore-dangle": "off",
    "no-return-await": "off",
    "no-param-reassign": "off",
    "no-shadow": "off",
    "no-nested-ternary": "off",
    "space-before-blocks": "off",
    "@typescript-eslint/space-before-blocks": "warn",
    "no-unused-expressions":"off",
    "no-plusplus": "off",
    "no-useless-return": "off",
    
    // react rules
    "react/function-component-definition": "off",
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx", ".js", ".jsx"] }],
    "react/jsx-props-no-spreading": ["error", { "custom": "ignore" }],
    "react/no-unescaped-entities": "off",
    "react/prop-types": "off",
    "react/jsx-no-useless-fragment": "off",
    "react/require-default-props": "off",
    "react/no-array-index-key": "off",

    // import rules
    "import/extensions": "off",
    "import/no-cycle": [0, { "ignoreExternal": true }],
    "import/prefer-default-export": "off",
    "import/order": [
      "warn",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", "internal", ["index", "sibling", "parent", "object", "type"]],
        "alphabetize": {
          "order": "desc",
          "caseInsensitive": true
        }
      }
    ],

    // typescript rules
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": false, "classes": false, "variables": true }
    ],
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-explicit-any": ["off"],
    "@typescript-eslint/restrict-template-expressions": "off"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": ["**/*.ts", "**/*.tsx"]
    },
    "import/resolver": {
      "typescript": {
        // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
        "alwaysTryTypes": true, 
        // use <root>/path/to/folder/tsconfig.json
      "project": "./tsconfig.json"
      }
    }
  }
}
